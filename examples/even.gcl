// This uses mutual recursion to check if a number is even. Supposedly valid.
pre { x >= 0 }
is_even(x:int | result:bool) {
  if x = 0 then {
    result := true
  } else {
    (result) := is_odd(x-1)
  }
}
post { result = (2 * (x/2) = x) }

pre { x >= 0 }
is_odd(x:int | result:bool) {
  if x = 0 then {
    result := false
  } else {
    (result) := is_even(x-1)
  }
}
post { result = ~(2 * (x/2) = x) }
