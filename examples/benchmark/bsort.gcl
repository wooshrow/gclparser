// Bubble sort.

// N is an experiment parameter; replace it with a concrete value.

pre { #a>=0 && #a>=N }
bsort(a:[]int | sorted:[]int) {
  var k:int {
    k := 0 ;
    // inv of outer loop
    assert 0<=k && k<=#a
           && (forall i:: 0<=i && i<k ==> (forall j:: i<=j && j<#a ==> a[i]<=a[j])) ;
    while k<#a do {
      var m:int, tmp:int {
         m := #a-1 ;
         // inv of inner loop
         assert 0<=k && k<=#a
                && (forall i:: 0<=i && i<k ==> (forall j:: i<=j && j<#a ==> a[i]<=a[j]))
                && k<=m && m<#a
                && (forall j:: m<=j && j<#a ==> a[m]<=a[j]) ;
         while k<m do {
            if a[m]<a[m-1] then {
              tmp := a[m] ;
              a[m] := a[m-1] ;
              a[m-1] := tmp
            } else {
              skip
            } ;
            m := m-1
         }
      } ;
      k := k+1
    }
  } ;
  sorted := a
}
post { forall i:: 0<=i && i<#sorted ==> (forall j:: i<=j && j<#sorted ==> sorted[i]<=sorted[j]) }
